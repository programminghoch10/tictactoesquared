.game {
  --current: #49b34e;

  --default: #ddd;
  --default-alt: #ccc;
  --player1: rgb(44, 202, 176);
  --player2: rgb(255, 123, 0);
  --player1alt: rgba(44, 202, 176, 0.3);
  --player2alt: rgba(255, 123, 0, 0.3);

  --size: 70vh;
  --thickness: 7px;

  display: flex;
  flex-direction: column;
  align-items: center;

  margin: 0;
}

.game .outer {
  position: relative;


  margin: 94px 0;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.game .icons {
    margin-top: 12px;
    margin-right: 12px;
    margin-left: auto;
}

.game .icons i {
    position: relative;
    cursor: pointer;
}
.game .icons i:hover::after {
    opacity: 1;
}
.game .icons .reload::after { content: "reload"; }
.game .icons .reset::after { content: "reset"; }
.game .icons .github::after { content:"github"; }
.game .icons i::after {
    position: absolute;

    opacity: 0;

    left: 50%;
    transform: translate(-50%, -30px);

    padding: 4px;

    background: var(--default-alt);
    color: var(--background-color);

    border-radius: 5px;
    font-family: "Roboto", sans-serif;

    transition: opacity 200ms linear;

    pointer-events: none;
}

.game .wrapper {
  position: relative;

  overflow: hidden;

  padding: 4px;
}

.game .win-screen {
  position: absolute;

  display: flex;

  justify-content: center;
  align-items: center;

    width: 100%;
    height: 100%;

  background: transparent;

  color: transparent;
  font-size: calc(var(--size) * 0.1);

  border-radius: 10px;

  pointer-events: none;

  transition: background 200ms linear, color 200ms linear;
}

.game .win-screen i {
    position: relative;

    width: 60px;
    height: 60px;
}

.game .win-screen .o {
    transform: translate(0, 8px);
}

.game .win-screen .o::before {
    content: '';
    border-color: white;
}

.game .win-screen .x::before,
.game .win-screen .x::after {
    content: '';
    background: white;
}

.game .win-active {
  z-index: 10;
  background: rgba(0, 0, 0, 0.6);
  color: var(--color);
  pointer-events: all;
}

.game td,
.game tr,
.game table {
  margin: 0;
  padding: 0;
}

.game table {
  margin: 0 auto;
}

.game table table td {
  position: relative;

  width: calc(var(--size) / 9);
  height: calc(var(--size) / 9);

  padding: 1px;
}

.game table table td .i {
  display: flex;
  justify-content: center;
  align-items: center;

  width: 100%;
  height: 100%;

  background: var(--default);

  text-align: center;

  border-radius: 5px;
}

.game table td {
  position: relative;

  padding: 4px;
}

.game table .active::after {
  content: "";

  position: absolute;
  z-index: 1;

  transform: translate(-8px, calc(-100% + 8px));

  width: 100%;
  height: 100%;

  border-radius: 5px;
  border: var(--current) solid 4px;

  pointer-events: none;
}

.game table {
  border-collapse: collapse;
}

.game .i {
  transition: transform 200ms ease-in-out;

  color: transparent;
}

.game .i::after,
.game .i::before {
  content: "";

  opacity: 0;

  transition: opacity 200ms cubic-bezier(1, 0, 1, 0.01), transform 200ms linear;
}

.game .ox {
  transform: scale(-1, 1);
}

.game .x::after,
.game .x::before {
  position: absolute;
  z-index: 2;

  transform: rotate(45deg) scale(-1, 1);

  opacity: 1;

  width: var(--thickness);
  height: 90%;

  background: var(--player1);

  border-radius: 10px;
}

.game .x::before {
  transform: rotate(-45deg) scale(-1, 1);
}

.game .o::before {
  position: absolute;
  z-index: 2;

  transform: scale(-1, 1);

  opacity: 1;

  width: 60%;
  height: 60%;

  background: transparent;

  border: var(--player2) var(--thickness) solid;
  border-radius: 50%;
}

.game .winx .i {
  background: var(--player1alt);
}

.game .wino .i {
  background: var(--player2alt);
}

.game input[type="button"] {
  width: 100px;
  height: 30px;

  border-radius: 5px;
  border: var(--default) solid 2px;
  background: transparent;
  color: var(--color);
}

.game input[type="button"]:hover {
  background: var(--default);
}

@media (prefers-color-scheme: dark) {
  .game {
    --default: #444;
    --default-alt: #555;
  }
}

@media only screen and (max-height: 800px) and (min-width: 800px) {
  .game {
    --thickness: 3px;
  }
}

@media only screen and (orientation: portrait) {
  .game {
    --size: 90vw;
  }
}
