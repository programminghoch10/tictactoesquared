.game {
  --default: #ddd;
  --default-alt: #ccc;

  --size: 70vh;
  --tilesize: 3;
  --thickness: 7px;

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  height: 100vh;
  overflow: hidden;

  margin: 0;
}

.game .outer {
  position: relative;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.game .icons {
  display: flex;
  width: calc(100% - 42px);
  height: 12px;

  margin-bottom: 8px;

  color: var(--default-alt);
}

.game .icons i::before {
  color: var(--default-alt);
}

.game .icons .right {
  margin-left: auto;
}

.game .icons i {
    position: relative;

    white-space: nowrap;
}
.game .icons i:hover::after {
    opacity: 1;

}
.game .icons .lightmode {
    display: none;
}
.dark .game .icons .darkmode {
    display: none;
}
.dark .game .icons .lightmode {
    display: initial;
}

.game .icons .reload, .game .icons .reset, .game .icons .github, .game .icons .darkmode, .game .icons .lightmode, .game .icons .debug, .game .icons .home {
  cursor: pointer;
}

.game .icons .reload::after { content: "reload"; }
.game .icons .reset::after { content: "reset"; }
.game .icons .github::after { content:"github"; }
.game .icons .darkmode::after { content: "dark theme"; }
.game .icons .lightmode::after { content: "light theme"; }
.game .icons .debug::after { content: "debug mode"; }
.game .icons i::after {
    position: absolute;

    opacity: 0;

    left: 50%;
    transform: translate(-50%, -30px);

    padding: 4px;

    background: var(--default-alt);
    color: var(--background-color);

    border-radius: calc(var(--size) / 100);
    font-family: "Roboto", sans-serif;
    font-weight: bold;

    transition: opacity 200ms linear;

    pointer-events: none;
}

.game .wrapper {
  position: relative;

  overflow: hidden;

  padding: 4px;
}

.game td,
.game tr,
.game table {
  margin: 0;
  padding: 0;
}

.game table {
  margin: 0 auto;
}

.game table table td {
  position: relative;

  width: calc(var(--size) / (var(--tilesize) * var(--tilesize)));
  height: calc(var(--size) / (var(--tilesize) * var(--tilesize)));

  padding: 1px;
}

.game table table td .i {
  display: flex;
  justify-content: center;
  align-items: center;

  width: calc(var(--size) / (var(--tilesize) * var(--tilesize)));
  height: calc(var(--size) / (var(--tilesize) * var(--tilesize)));

  background: var(--default);

  text-align: center;

  border-radius: 10%;
}

.game table td {
  position: relative;

  padding: 4px;
}

.game table {
  border-collapse: collapse;
}

.game table table {
  overflow: hidden;
}

.game .i {
  transition: transform 200ms ease-in-out;
}

.game .sbutton {
  transition: background 100ms linear;
}

.game .sbutton .sbuttonicon {
  color: var(--player1);
  transition: color 100ms linear;
}

.game .sbutton-alt .sbuttonicon {
  color: var(--player2);
}

.game .sbutton:hover {
  background: var(--player1);
}
.game .sbutton-alt:hover {
  background: var(--player2);
}

.game .sbutton:hover .sbuttonicon {
  color: white;
}

.game .fullwidth-transform {
  width: calc(8px + var(--size) / (var(--tilesize)));
}

.game .fullwidth .i {
  position: relative;

  min-width: calc(300% + 2px);
  border-radius: 10px;

  text-align: center;

  color: var(--player1);

  font-weight: bold;
  letter-spacing: 2px;

  overflow: hidden;
}

.game .fullwidth {
  cursor: default;
}

.game .fullwidth-transform .i {
  min-width: calc(100% + 2px);
}

.game .fullwidth .alt {
  color: var(--player2);
}

.game .fullwidth .i::before {
  opacity: 1;
  z-index: -10;

  position: absolute;

  display: block;

  transform: translateX(-110%);
  border-radius: 50%;

  width: calc(var(--size) / (var(--tilesize)) + 60px);
  height: 100%;

  background: var(--player1);

  pointer-events: none;

  transition: transform 200ms ease-in-out, border-radius 200ms linear;
}

.game .fullwidth .alt::before {
  transform: translateX(110%);

  background: var(--player2);
}

.game .fullwidth .noanimation::before {
  transition: none;
  display: none;
}

.game .fullwidth:hover .i::before {
  transform: translateX(0);
  border-radius: 0px;
}

.game .fullwidth a {
  z-index: 1000;
  transition: color 200ms linear;
}

.game .fullwidth:hover a {
  color: white;
}

.game .fullwidth td {
  color: var(--player1);
}

.game .i::after,
.game .i::before {
  content: "";

  opacity: 0;

  transition: opacity 200ms cubic-bezier(1, 0, 1, 0.01), transform 200ms linear;
}

.game .ox {
  transform: scale(-1, 1);
}

.game .x::after,
.game .x::before {
  position: absolute;
  z-index: 2;

  transform: rotate(45deg) scale(-1, 1);

  opacity: 1;

  width: calc(var(--size) / 100);
  height: 90%;

  background: var(--player1);

  border-radius: calc(var(--size) / 100);
}

.game .x::before {
  transform: rotate(-45deg) scale(-1, 1);
}

.game .o::before {
  position: absolute;
  z-index: 2;

  transform: scale(-1, 1);

  opacity: 1;

  width: 60%;
  height: 60%;

  background: transparent;

  border: var(--player2) calc(var(--size) / 100) solid;
  border-radius: 50%;
}

.game .winx .i {
  background: var(--player1alt);
}

.game .wino .i {
  background: var(--player2alt);
}

.dark .game {
    --default: #444;
    --default-alt: #555;
}

@media only screen and (max-width: 700px) {
  .hideable {
    display: none;
  }

  .fullwidth-transform .i, .fullwidth-transform .i::before {
    width: calc(var(--size) + 20px) !important;
  }

  .fullwidth .i {
    border-radius: 5px !important;
  }
}

@media only screen and (max-width: 600px) {
  .game {
    --size: calc(100vw - 40px);
  }


  .game table td {
    padding: 1px;
  }

  .game table .current::after {
    transform: translate(-5px, calc(-100% + 4px));
  }

  .game .icons {
      width: 60%;
      transform: scale(1.5) translate(0, -6px);
  }
}

@media only screen and (max-width: 400px) {
  .game .sbutton .sbuttonicon {
    transform: scale(0.5);
  }

  .game .fullwidth .i {
    letter-spacing: 1px;
    font-size: calc(var(--size) / 25 );
  }
}
